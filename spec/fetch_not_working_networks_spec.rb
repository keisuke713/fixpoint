require "../src/fetch_not_working_networks"

RSpec.describe "同じネットワーク内でサーバが同時に故障をしているかどうかを解析する" do
  context "単一ネットワークのみの場合" do
    it "同じネットワーク内の全てのサーバが同期間に故障をしていない" do
      input = [
        ["20201019133124", "192.168.1.1/24", "30"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133134", "192.168.1.3/24", "-"],
        ["20201019133135", "192.168.1.1/24", "5"],
        ["20201019133224", "192.168.1.2/24", "522"],
        ["20201019133234", "192.168.1.1/24", "-"]
      ]
      output = []
      expect(fetch_not_working_networks(input, 1)).to eq output
    end
    it "一定期間同じネットワーク内の全てのサーバが故障する" do
      input = [
        ["20201019133124", "192.168.1.1/24", "30"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133134", "192.168.1.3/24", "-"],
        ["20201019133135", "192.168.1.1/24", "-"],
        ["20201019133224", "192.168.1.1/24", "522"],
        ["20201019133234", "192.168.1.2/24", "-"]
      ]
      output = [
        {"network" => "192.168.1", "from" => "20201019133135", "to" => "20201019133224"}
      ]
      expect(fetch_not_working_networks(input, 1)).to eq output
    end
    it "途中から最後まで同じネットワーク内の全てのサーバが故障する" do
      input = [
        ["20201019133124", "192.168.1.1/24", "30"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133133", "192.168.1.3/24", "-"],
        ["20201019133134", "192.168.1.2/24", "-"],
        ["20201019133135", "192.168.1.1/24", "3"],
        ["20201019133224", "192.168.1.1/24", "-"],
        ["20201019133234", "192.168.1.2/24", "-"]
      ]
      output = [
        {"network" => "192.168.1", "from" => "20201019133224", "to" => "-----"}
      ]
      expect(fetch_not_working_networks(input, 1)).to eq output
    end
    it "同じネットワーク内の全てのサーバが複数回同時に故障する" do
      input = [
        ["20201019133124", "192.168.1.1/24", "-"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133133", "192.168.1.3/24", "1"],
        ["20201019133134", "192.168.1.1/24", "-"],
        ["20201019133135", "192.168.1.3/24", "-"],
        ["20201019133224", "192.168.1.1/24", "1"],
        ["20201019133234", "192.168.1.2/24", "-"],
        ["20201019133235", "192.168.1.3/24", "-"],
        ["20201019133237", "192.168.1.1/24", "-"]
      ]
      output = [
        {"network" => "192.168.1", "from" => "20201019133135", "to" => "20201019133224"},
        {"network" => "192.168.1", "from" => "20201019133237", "to" => "-----"}
      ]
      expect(fetch_not_working_networks(input, 1)).to eq output
    end
    it "同じネットワーク内の全てのサーバが一定期間の間に全てN回タイムアウトする" do
      input = [
        ["20201019133124", "192.168.1.1/24", "-"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133133", "192.168.1.3/24", "1"],
        ["20201019133134", "192.168.1.1/24", "-"],
        ["20201019133135", "192.168.1.3/24", "-"],
        ["20201019133224", "192.168.1.1/24", "1"],
        ["20201019133234", "192.168.1.2/24", "-"],
        ["20201019133235", "192.168.1.3/24", "-"],
        ["20201019133237", "192.168.1.1/24", "-"]
      ]
      output = [
        {"network" => "192.168.1", "from" => "20201019133135", "to" => "20201019133224"},
        {"network" => "192.168.1", "from" => "20201019133237", "to" => "-----"}
      ]
      expect(fetch_not_working_networks(input, 3)).to eq output
    end
  end
  context "複数ネットワークの場合" do
    it "同じネットワーク内の全てのサーバが同期間に故障をしていない" do
      input = [
        ["20201019133124", "192.168.1.1/24", "30"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133126", "10.20.30.2/16", "-"],
        ["20201019133134", "192.168.1.3/24", "-"],
        ["20201019133135", "192.168.1.1/24", "5"],
        ["20201019133136", "10.20.30.1/16", "1"],
        ["20201019133224", "192.168.1.2/24", "522"],
        ["20201019133225", "10.20.30.2/16", "1"],
        ["20201019133234", "192.168.1.1/24", "-"]
      ]
      output = []
      expect(fetch_not_working_networks(input, 1)).to eq output
    end
    it "ネットワーク192.168.1内の全てのサーバがある期間で全て故障する" do
      input = [
        ["20201019133124", "192.168.1.1/24", "-"],
        ["20201019133125", "192.168.1.2/24", "-"],
        ["20201019133126", "10.20.30.2/16", "-"],
        ["20201019133134", "192.168.1.3/24", "-"],
        ["20201019133135", "192.168.1.1/24", "-"],
        ["20201019133136", "10.20.30.1/16", "-"],
        ["20201019133224", "192.168.1.2/24", "-"],
        ["20201019133225", "10.20.30.2/16", "-"],
        ["20201019133234", "192.168.1.1/24", "-"],
        ["20201019133244", "192.168.1.3/24", "-"],
        ["20201019133245", "10.20.30.2/16", "-"]
      ]
      output = [
        {"network" => "192.168.1", "from" => "20201019133244", "to" => "-----"}
      ]
      expect(fetch_not_working_networks(input, 2)).to eq output
    end
  end
end